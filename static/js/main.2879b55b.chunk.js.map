{"version":3,"sources":["Header.js","AddNoteForm.js","EditNoteForm.js","NoteTable.js","ControlPanel.js","NoteManager.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AddNoteForm","props","onTitleChange","event","title","target","value","trim","validateTitle","setState","onContentChange","content","validateContent","onTagsChange","tags","split","onSave","preventDefault","state","validationErrors","length","onSaveNote","id","message","addValidationError","removeValidationError","push","filter","error","validationErrorSummary","this","map","index","onClick","onCloseModal","onSubmit","htmlFor","type","name","autoComplete","autoFocus","onChange","rows","Component","EditNoteForm","note","join","NoteTable","notes","noteRows","classes","isNew","style","width","onOpenEditNoteModal","onDeleteNote","maxWidth","toString","colSpan","align","ControlPanel","onSearchTitleChanged","onFindNotes","openAddNoteModal","placeholder","NoteManager","componentDidMount","details","handleOnDeleteNote","noteId","n","handleOnFindNotes","search","a","toLowerCase","includes","handleOnAddNote","isAddNoteModalOpen","newNote","todoId","handleOnCloseAddNoteModal","handleOpenAddNoteModal","handleOnCloseEditNoteModal","isEditNoteModalOpen","handleOpenEditNoteModal","Error","selectedNote","select","handleOnEditNote","forEach","isOpen","onRequestClose","ariaHideApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2879b55b.chunk.js","sourcesContent":["import React from 'react';\r\nconst Header = () => (\r\n    <nav className=\"header navbar navbar-expand-sm navbar-dark bg-react-green\">\r\n        <div className=\"container\">\r\n            <div className=\"navbar-brand\">\r\n                \r\n                <span className=\"align-middle text-react-blue\">Todo Notes</span>\r\n            </div></div>\r\n    </nav>\r\n);\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\n\r\nclass AddNoteForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            content: '',\r\n            tags: [],\r\n            validationErrors: []\r\n        };\r\n\r\n    }\r\n\r\n    \r\n    onTitleChange = (event) =>{\r\n        const title = event.target.value.trim();\r\n\r\n        this.validateTitle(title);\r\n\r\n        this.setState({ title: title });\r\n    }\r\n\r\n\r\n    onContentChange = (event) => {\r\n        const content = event.target.value.trim();\r\n\r\n        this.validateContent(content);\r\n        \r\n        this.setState({ content: content });\r\n    }\r\n\r\n\r\n    onTagsChange = (event) => {\r\n        const tags = event.target.value.trim();\r\n           \r\n            this.setState({ tags: tags.split(',')});\r\n    }\r\n\r\n    \r\n     \r\n    onSave = (event) =>{\r\n        event.preventDefault();\r\n\r\n        if (this.state.validationErrors && this.state.validationErrors.length === 0) {\r\n            const { title, content } = this.state;\r\n            \r\n            if (this.validateTitle(title) && this.validateContent(content)) {\r\n                this.props.onSaveNote({\r\n                    id: this.state.id,\r\n                    title: this.state.title,\r\n                    content: this.state.content,\r\n                    tags: this.state.tags\r\n                });\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    validateTitle = (title) => {\r\n        const message = 'Title is required';\r\n\r\n        if (title === '') {\r\n            this.addValidationError(message);\r\n            return false;\r\n        } else {\r\n            this.removeValidationError(message);\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    validateContent = (content) => {\r\n        const message = 'Content is required';\r\n\r\n        if (content === '') {\r\n            this.addValidationError(message);\r\n            return false;\r\n        } else {\r\n            this.removeValidationError(message);\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    \r\n    addValidationError = (message) => { \r\n        let validationErrors = this.state.validationErrors;\r\n        validationErrors.push({message});\r\n        this.setState( {\r\n                validationErrors: validationErrors\r\n        });      \r\n    }\r\n\r\n    \r\n    removeValidationError = (message) => {\r\n        \r\n        let validationErrors = this.state.validationErrors;\r\n        validationErrors = validationErrors.filter(error => error.message !== message);;\r\n        this.setState( {\r\n                validationErrors: validationErrors\r\n        });     \r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        const validationErrorSummary = this.state.validationErrors.map((error,index) => \r\n            <div key={index} className=\"alert alert-danger\" id=\"errorMessage\">\r\n                {error.message}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"card card-body\">\r\n                <div className=\"mb-2\">        \r\n                    <span className=\"h4 my-auto\"><i className=\"fa fa-file-text-o fa-lg\"></i> New Note</span>\r\n                    <div className=\"float-right ml-auto\" id=\"close-modal\" onClick={this.props.onCloseModal}>\r\n                        <i className=\"fa fa-remove fa-2x mr-2 text-danger\"></i>\r\n                    </div>\r\n                </div>\r\n                {validationErrorSummary}\r\n                <form onSubmit={this.onSave} className=\"mt-2\" id=\"add-item-form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" autoComplete= \"off\" autoFocus onChange={this.onTitleChange} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"form-control\" name=\"content\" id=\"content\" rows=\"3\" autoComplete= \"off\" onChange={this.onContentChange}></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"tags\">Tags</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"tags\" id=\"tags\" autoComplete= \"off\" onChange={this.onTagsChange} />\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-4 col-md-3 col-xl-2 ml-auto\">\r\n                            <button type=\"submit\" className=\"btn btn-success btn-lg btn-block\" id=\"btn-save\">\r\n                                <i className=\"fa fa-save mr-2\"></i>Save\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-sm-4 col-md-3 col-xl-2\">\r\n                            <button className=\"btn btn-danger btn-lg btn-block mt-2 mt-sm-0\"\r\n                                onClick={this.props.onCloseModal}\r\n                                type=\"button\" id=\"btn-cancel\">\r\n                                <i className=\"fa fa-remove mr-2\"></i>Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default AddNoteForm;","import React, { Component } from 'react';\r\nclass EditNoteForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: props.note[0].id,\r\n            title: props.note[0].title,\r\n            content: props.note[0].content,\r\n            tags: props.note[0].tags,\r\n            validationErrors: []\r\n        };\r\n\r\n    }\r\n\r\n    \r\n    onTitleChange = (event) => {\r\n        const title = event.target.value;\r\n\r\n        this.validateTitle(title);\r\n\r\n        this.setState({ title: title });\r\n    }\r\n\r\n\r\n    onContentChange = (event) =>{\r\n        const content = event.target.value;\r\n\r\n        this.validateContent(content);\r\n        \r\n        this.setState({ content: content });\r\n    }\r\n\r\n\r\n    onTagsChange = (event) =>{\r\n        const tags = event.target.value;\r\n         \r\n            this.setState({ tags: tags.split(',')});\r\n    }\r\n\r\n    \r\n    onSave = (event) =>{\r\n        event.preventDefault();\r\n\r\n        if (this.state.validationErrors && this.state.validationErrors.length === 0) {\r\n            const { title, content } = this.state;\r\n            \r\n            if (this.validateTitle(title) && this.validateContent(content)) {\r\n                this.props.onSaveNote({\r\n                    id: this.state.id,\r\n                    title: this.state.title,\r\n                    content: this.state.content,\r\n                    tags: this.state.tags\r\n                });\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    validateTitle = (title) => {\r\n        const message = 'Title is required';\r\n\r\n        if (title === '') {\r\n            this.addValidationError(message);\r\n            return false;\r\n        } else {\r\n            this.removeValidationError(message);\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    validateContent = (content) => {\r\n        const message = 'Content is required';\r\n\r\n        if (content === '') {\r\n            this.addValidationError(message);\r\n            return false;\r\n        } else {\r\n            this.removeValidationError(message);\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    \r\n    addValidationError = (message) => { \r\n        let validationErrors = this.state.validationErrors;\r\n        validationErrors.push({message});\r\n        this.setState( {\r\n                validationErrors: validationErrors\r\n        });      \r\n    }\r\n\r\n    \r\n    removeValidationError = (message) => {\r\n        \r\n        let validationErrors = this.state.validationErrors;\r\n        validationErrors = validationErrors.filter(error => error.message !== message);;\r\n        this.setState( {\r\n                validationErrors: validationErrors\r\n        });     \r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        const validationErrorSummary = this.state.validationErrors.map((error,index) => \r\n            <div key={index} className=\"alert alert-danger alert-dismissible fade show\" id=\"errorMessage\">\r\n                {error.message}\r\n                \r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"card card-body\">\r\n                <div className=\"mb-2\">        \r\n                    <span className=\"h4 my-auto\"><i className=\"fa fa-file-text-o fa-lg\"></i> Edit Note</span>\r\n                    <div className=\"float-right ml-auto\" id=\"close-modal\" onClick={this.props.onCloseModal}>\r\n                        <i className=\"fa fa-remove mr-2 fa-2x text-danger\"></i>\r\n                    </div>\r\n                </div>\r\n                {validationErrorSummary}\r\n                <form onSubmit={this.onSave} className=\"mt-2\" id=\"edit-item-form\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"title\" name=\"title\" autoFocus onChange={this.onTitleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"form-control\" name=\"content\" id=\"content\" rows=\"3\" onChange={this.onContentChange} value={this.state.content}></textarea>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"tags\">Tags</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"tags\" id=\"tag\" onChange={this.onTagsChange} value={this.state.tags.join(',')} />\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <div className=\"col-sm-4 col-md-3 col-xl-2 ml-auto\">\r\n                            <button type=\"submit\" className=\"btn btn-success btn-block\" id=\"btn-save\">\r\n                                <i className=\"fa fa-save mr-2\"></i>Save\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-sm-4 col-md-3 col-xl-2\">\r\n                            <button className=\"btn btn-danger btn-block mt-2 mt-sm-0\"\r\n                                onClick={this.props.onCloseModal}\r\n                                type=\"button\" id=\"btn-cancel\">\r\n                                <i className=\"fa fa-remove mr-2\"></i>Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditNoteForm;","import React from 'react';\r\n\r\nconst NoteTable = (props) => {\r\n    const notes = props.notes;\r\n    let noteRows = \"\"\r\n    if(notes.length>0){\r\n         noteRows = notes.map(note => {\r\n\r\n            let classes = `small ${!!note.isNew ? 'table-success' : ''}`;\r\n            \r\n            return (\r\n                <tr key={note.id.toString()} id={`todo-item${note.id}`} className={classes}>\r\n                    <td className=\"align-middle\" style={{width: '80px'}}>\r\n                        <div className=\"d-flex flex-row\">\r\n                            <div data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit Note\" id={`edit-item${note.id}`} className=\"p-2 pointer\" onClick={() => props.onOpenEditNoteModal(note.id)}>\r\n                                <i className=\"fa fa-pencil fa-lg text-primary\"></i>\r\n                            </div>\r\n                            <div data-toggle=\"tooltip\" data-placement=\"top\" title=\"Delete Note\" id={`delete-item${note.id}`} className=\"p-2 pointer\" onClick={() => props.onDeleteNote(note.id)}>\r\n                                <i className=\"fa fa-trash fa-lg text-danger\"></i>\r\n                            </div>\r\n                        </div>                \r\n                    </td>\r\n                    <td className=\"align-middle\" id={`todo-title${note.id}`}>{note.title}</td>\r\n                    <td className=\"align-middle\" id={`todo-content${note.id}`}>\r\n                        <span className=\"d-inline-block text-truncate\" style={{maxWidth: '200px'}}>\r\n                            {note.content}\r\n                        </span>                \r\n                    </td>\r\n                    <td className=\"align-middle\" id={`todo-tag${note.id}`}>{note.tags.join(\",\")}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n    else {\r\n        noteRows = <tr ><td colSpan=\"4\" align=\"center\">No Items found</td></tr>\r\n    }\r\n    \r\n\r\n    return (\r\n            <table className=\"table table-bordered table-striped table-hover\" id=\"todo-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th className=\"align-middle text-center\">Title</th>\r\n                        <th className=\"align-middle text-center\">Content</th>\r\n                        <th className=\"align-middle text-center\">Tags</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {noteRows}\r\n                </tbody>\r\n            </table>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default NoteTable;\r\n","import React, { Component } from 'react';\r\n\r\nclass ControlPanel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: ''\r\n        };\r\n\r\n        \r\n    }\r\n\r\n    onSearchTitleChanged = (event)=> {\r\n        const title = event.target.value;\r\n        this.props.onFindNotes(title)\r\n        this.setState({title});\r\n        \r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <div className=\"input-group input-group-lg\">\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" id=\"add-item\" type=\"button\" onClick={this.props.openAddNoteModal}>\r\n                            <i className=\"fa fa-plus\"></i>\r\n                        </button>\r\n                    </span>\r\n                    <input type=\"text\" className=\"form-control\" id=\"search-item-input\" placeholder=\"Search for note by title ...\" value={this.state.title} onChange={this.onSearchTitleChanged} />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" id=\"search-item-button\" type=\"button\" onClick={() => this.props.onFindNotes(this.state.title)} >\r\n                            <i className=\"fa fa-search\"></i>\r\n                        </button>\r\n                    </span>\r\n                </div>        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ControlPanel;","import React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\nimport AddNoteForm from './AddNoteForm';\r\nimport EditNoteForm from './EditNoteForm';\r\nimport NoteTable from './NoteTable';\r\nimport ControlPanel from './ControlPanel';\r\n\r\nclass NoteManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            details : [],\r\n            notes: [],\r\n            selectedNote: null,\r\n            isAddNoteModalOpen: false,\r\n            isEditNoteModalOpen: false\r\n        };\r\n        this.todoId = 1;\r\n        \r\n    }\r\n\r\ncomponentDidMount = () =>{\r\n this.setState({\r\n     notes : this.state.details\r\n })   \r\n}\r\n\r\n    handleOnDeleteNote = (noteId)=> {\r\n\r\n        let notes = this.state.notes.filter(n=>{\r\n            return n.id !== noteId\r\n        });\r\n        this.setState({\r\n            notes,\r\n            details:notes\r\n        })\r\n        \r\n\r\n        \r\n    }\r\n\r\n\r\n    handleOnFindNotes = (title) => {\r\n        if (!title || title === '') {\r\n            this.setState({\r\n                     notes : this.state.details\r\n                 }) \r\n              \r\n            return;\r\n        }\r\n        else{\r\n             let search = this.state.details.filter(a=>{\r\n              return  a.title.toLowerCase().includes(title.toLowerCase())\r\n            })\r\n             this.setState({\r\n                     notes : search\r\n                 })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleOnAddNote = (note) => {\r\n\r\n        this.setState({ isAddNoteModalOpen: false });\r\n\r\n        const { title, content, tags } = note;\r\n\r\n        let newNote = this.state.notes\r\n          newNote.push({id:this.todoId,title,content, tags})\r\n        this.setState({\r\n            notes:newNote,\r\n            details:newNote\r\n        })\r\n        this.todoId = this.todoId + 1;\r\n      \r\n    }\r\n\r\n\r\n    handleOnCloseAddNoteModal = () =>{\r\n        this.setState({isAddNoteModalOpen: false});\r\n    }\r\n\r\n\r\n    handleOpenAddNoteModal = () =>{\r\n        this.setState({isAddNoteModalOpen: true});\r\n    }\r\n\r\n\r\n    handleOnCloseEditNoteModal = () =>{\r\n        this.setState({isEditNoteModalOpen: false});\r\n    }\r\n\r\n\r\n    handleOpenEditNoteModal = (noteId) => {\r\n        if (!noteId || noteId < 1) {\r\n            throw Error('Cannot edit note. Invalid note id specified.');\r\n        }\r\n        else{\r\n            let selectedNote = this.state.notes.filter(select => {\r\n                return select.id === noteId\r\n            })\r\n            this.setState({\r\n                selectedNote,\r\n                isEditNoteModalOpen : true,\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    handleOnEditNote = (note) =>{\r\n        this.setState({ isEditNoteModalOpen: false });\r\n        \r\n        const { title, content, tags } = note;\r\n        let notes = this.state.notes\r\n            notes.forEach(n =>{\r\n            if(n.id === note.id){\r\n              n.title =  title;\r\n              n.content = content;\r\n                n.tags = tags\r\n            }\r\n        })\r\n        this.setState({\r\n            notes,\r\n            details:notes\r\n        })\r\n\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>                                \r\n                <Modal isOpen={this.state.isAddNoteModalOpen} onRequestClose={this.handleOnCloseAddNoteModal} ariaHideApp={false}>\r\n                    <AddNoteForm onSaveNote={this.handleOnAddNote} onCloseModal={this.handleOnCloseAddNoteModal} />\r\n                </Modal>\r\n                <Modal isOpen={this.state.isEditNoteModalOpen} onRequestClose={this.handleOnCloseEditNoteModal} ariaHideApp={false}>\r\n                    <EditNoteForm onSaveNote={this.handleOnEditNote} onCloseModal={this.handleOnCloseEditNoteModal} note={this.state.selectedNote} />\r\n                </Modal>\r\n                <div className=\"mb-3\">\r\n                    <ControlPanel openAddNoteModal={this.handleOpenAddNoteModal} onFindNotes={this.handleOnFindNotes} />\r\n                </div>\r\n                <NoteTable notes={this.state.notes} onDeleteNote={this.handleOnDeleteNote} onOpenEditNoteModal={this.handleOpenEditNoteModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteManager;","import React, { Component } from 'react';\nimport Header from './Header';\nimport NoteManager from './NoteManager';\nexport default class App extends Component {\n        render() {\n        return (\n            <div>\n                <Header />\n                <div className=\"container mt-5\">\n                  <NoteManager/>\n                </div>\n                \n            \n            </div>\n        );\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}